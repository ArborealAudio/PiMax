name: Deploy

on:
  workflow_run:
    workflows: ["Cmake"]
    types: [completed]
    branches: ["main"]
  workflow_dispatch:

env:
  PLUGIN_NAME: PiMax
  PLUGIN_VERSION: "1.1.3"
  AWS_API_KEY: ${{ secrets.AWS_API_KEY }}

jobs:
  deploy-linux:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:18.04
    steps:
    - name: Install Deps
      run: |
        apt update
        apt install libasound2-dev libx11-dev \
          libxcomposite-dev libxcursor-dev libxext-dev libxinerama-dev \
          libxrandr-dev libxrender-dev libfreetype6-dev libglu1-mesa-dev \
          libjack-jackd2-dev libcurl4-gnutls-dev

    - name: Get CMake
      uses: lukka/get-cmake@latest

    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Build
      run: |
        wget https://archive.org/download/VST2SDK/vst_sdk2_4_rev1.zip -O vst2_sdk.zip
        unzip vst2_sdk.zip
        cmake -Bbuild -GNinja -DPRODUCTION_BUILD=1 -DBUILD_VST2=1
        cmake --build build --config Release
        ./installer/linux-installer.sh --clap 
        echo "ARTIFACT=${PLUGIN_NAME}-linux.tar.xz" >> "$GITHUB_ENV"
        mkdir bin
        cp pkg/${PLUGIN_NAME}-linux.tar.xz bin/

    - name: Upload Artifact
      uses: actions/upload-artifact@v4.3.3
      with:
        name: ${{ env.ARTIFACT }}
        path: bin/${{ env.ARTIFACT }}

    - name: Configure S3 Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: us-east-1

    - name: Upload to S3
      run: aws s3 sync --acl public-read bin/ s3://arborealaudioinstallers/pimax

  deploy-mac-and-windows:
    if: $GITHUB_EVENT_NAME == 'workflow_run' && ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ${{ matrix.os }}
    strategy:
        fail-fast: false
        matrix:
          include:
            - os: macos-12
              cmake-options: -GNinja -DBUILD_VST2=1 -DPRODUCTION_BUILD=1
            - os: windows-2019
              cmake-options: -DBUILD_VST2=1 -DPRODUCTION_BUILD=1

    steps:

    - name: MacOS Install Extra Tools
      if: runner.os == 'macOS'
      run: |
        brew install packages ninja

    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Import App Certs (MacOS)
      uses: apple-actions/import-codesign-certs@v2
      if: runner.os == 'macOS'
      with:
        keychain-password: ${{ secrets.MACOS_CERT_PASSWORD }}
        p12-file-base64: ${{ secrets.MACOS_APP_CERT }}
        p12-password: ${{ secrets.MACOS_CERT_PASSWORD }}

    - name: Import Installer Certs (MacOS)
      uses: apple-actions/import-codesign-certs@v2
      if: runner.os == 'macOS'
      with:
        keychain-password: ${{ secrets.MACOS_CERT_PASSWORD }}
        p12-file-base64: ${{ secrets.MACOS_INSTALL_CERT }}
        p12-password: ${{ secrets.MACOS_CERT_PASSWORD }}
        create-keychain: false

    - name: Build & Sign (MacOS)
      if: runner.os == 'macOS'
      env:
        APP_CERT: ${{ secrets.MACOS_DEVELOPER_ID_APPLICATION }}
        INSTALL_CERT: ${{ secrets.MACOS_DEVELOPER_ID_INSTALLER }}
        APPLE_USER: ${{ secrets.MACOS_NOTARY_USER }}
        NOTARY_PW: ${{ secrets.MACOS_NOTARY_PASSWORD }}
        TEAM_ID: ${{ secrets.MACOS_TEAM_ID }}
      run: |
        sudo xcode-select -s /Applications/Xcode_13.4.1.app
        wget https://archive.org/download/VST2SDK/vst_sdk2_4_rev1.zip -O vst2_sdk.zip
        7z x vst2_sdk.zip
        cmake -Bbuild ${{ matrix.cmake-options }}
        cmake --build build --config Release
        ./installer/mac-installer.sh --clap
        echo "ARTIFACT=${PLUGIN_NAME}-mac.dmg" >> "$GITHUB_ENV"
        mkdir bin
        cp pkg/build/${PLUGIN_NAME}-mac.dmg bin/

    - name: Build (Windows)
      if: runner.os == 'Windows'
      shell: bash
      run: |
        powershell Invoke-WebRequest -Uri https://archive.org/download/VST2SDK/vst_sdk2_4_rev1.zip -OutFile vst2_sdk.zip
        7z x vst2_sdk.zip
        cmake -Bbuild ${{ matrix.cmake-options }}
        cmake --build build --config Release
        ./installer/win-installer.sh --clap --vst3-no-bundle
        echo "ARTIFACT=${PLUGIN_NAME}-windows.exe" >> "$GITHUB_ENV"
        mkdir bin
        cp pkg/Output/${PLUGIN_NAME}-windows.exe bin/

    - name: Sign (Windows)
      if: runner.os == 'Windows'
      uses: azure/trusted-signing-action@v0.3.16
      with:
        azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
        azure-client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
        endpoint: ${{ secrets.AZURE_ENDPOINT }}
        code-signing-account-name: ${{ secrets.AZURE_CODE_SIGNING_NAME }}
        certificate-profile-name: ${{ secrets.AZURE_CERT_PROFILE_NAME }}

        files-folder: bin
        files-folder-filter: exe
        file-digest: SHA256

    - name: Upload Artifact
      uses: actions/upload-artifact@v4.3.3
      with:
        name: ${{ env.ARTIFACT }}
        path: bin/${{ env.ARTIFACT }}

    - name: Configure S3 Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: us-east-1

    - name: Upload to S3
      run: aws s3 sync --acl public-read bin/ s3://arborealaudioinstallers/pimax
